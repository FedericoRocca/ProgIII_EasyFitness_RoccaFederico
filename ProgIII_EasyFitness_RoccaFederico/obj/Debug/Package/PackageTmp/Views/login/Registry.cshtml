@model ProgIII_EasyFitness_RoccaFederico.Models.personaModel

@{
    ViewBag.Title = "Registry";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @{
            if (Session["userExists" + Session.SessionID] != null)
            {
                if (Session["userExists" + Session.SessionID].ToString() == "true")
                {
                    <div class="form-group alert alert-danger" role="alert">
                        <p>El usuario ya existe</p>
                        <p>Si querés recuperar la contraseñá hacé click @Html.ActionLink("acá", "RecoverPassword", "login", null, new { @class = "" })
                    </div>
                }
            }
        }

        <div class="form-group">
            @Html.LabelFor(model => model.user.mail, "E-Mail", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user.mail, new { htmlAttributes = new { @class = "form-control", @placeholder = "E-Mail", @type = "email", required = "required" } })
                @Html.ValidationMessageFor(model => model.user.mail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.user.password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.user.password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Password", @type = "password", required = "required" } })
                @Html.ValidationMessageFor(model => model.user.password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, "Nombre", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre", required = "required" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellido, "Apellido", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellido", required = "required" } })
                @Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dni, "DNI", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dni, new { htmlAttributes = new { @class = "form-control", @placeholder = "D.N.I.", @type = "number", @max = 99999999, required = "required" } })
                @Html.ValidationMessageFor(model => model.dni, "", new { @class = "text-danger" })
            </div>
        </div>

        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/smoothness/jquery-ui.css">
        <script src="//code.jquery.com/jquery-1.12.4.js"></script>
        <script src="//code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <div class="form-group">
            @Html.LabelFor(model => model.fechaNacimiento, "Fecha de nacimiento", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaNacimiento, new { htmlAttributes = new { @class = "form-control", @type = "text", 
               @placeholder = "Fecha de nacimiento", required = "required", id="datepicker", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.fechaNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>



        <script>
            $("#datepicker").datepicker({
                changeMonth: true,
                changeYear: true,
                dayNamesMin: ["Do", "Lu", "Ma", "Mi", "Ju", "Vi", "Sa"],
                monthNames: ["Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre"],
                monthNamesShort: ["Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul", "Ago", "Sep", "Oct", "Nov", "Dic"],
                yearRange: "1900:2300",
                dateFormat: "dd/mm/yy"
            });
        </script>

        @{
            var selectList = new SelectList(
            new List<SelectListItem>
            {
                new SelectListItem {Text = "Alumno", Value = "Alumno"},
                new SelectListItem {Text = "Entrenador", Value = "Entrenador"},
                                                                                }, "Value", "Text");
        }
        <div class="form-group">
            @Html.LabelFor(model => model.user.profile, "Yo soy", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m.user.profile, selectList, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.user.profile, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Registrarse" class="btn btn-success" />
            </div>
        </div>
    </div>
}